apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: add-to-service-mesh
  title: Add To Service Mesh
  description: Create a VirtualService...
  
  tags:
    - recommended
    - service-mesh
    - istio
spec:
  owner: rhdh
  type: resource
  parameters:
    - title: Service Mesh Information
      required:
        - service_namespace
        - app_path
        - app_service
      properties:
        service_namespace:
          title: Name
          type: string
          description: Namespace
          default: servlet
        app_path:
          title: Path
          type: string
          description: Path 
          default: service-mesh-demo
        app_service:
          title: Service
          type: string
          description: Deployment Service
          default:  service-mesh-demo
    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-x6thp.x6thp.sandbox1348.opentlc.com
            owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: development
              enum:
                - development
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          service_namespace: ${{ parameters.service_namespace }}
          app_path: ${{ parameters.app_path }}
          app_service: ${{ parameters.app_service }}
    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: ${{ parameters.repo.host }}?owner=${{ parameters.repo.owner
          }}&repo=${{parameters.service_namespace}}
        repoVisibility: public
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          service_namespace: ${{ parameters.service_namespace }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.service_namespace}}-gitops.git
          source_repository: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.service_namespace}}.git
        targetPath: ./tenant-gitops
    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.service_namespace}}-gitops"
        title: gitops resources for ${{ parameters.service_namespace }}
        description: gitops resources for ${{ parameters.service_namespace }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.service_namespace }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.service_namespace }}-gitops.git
        path: 'argocd/'
  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Gitops Repository
        url: ${{ steps.publish.output.remoteUrl }}-gitops
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
