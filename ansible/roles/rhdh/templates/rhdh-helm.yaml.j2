global:
  clusterRouterBase: 'apps.{{ domain }}'
  # -- Custom hostname shorthand, overrides `global.clusterRouterBase`, `upstream.ingress.host`, `route.host`, and url values in `upstream.backstage.appConfig`
  #host: ""
  # -- Enable service authentication within Backstage instance
  auth:
    # -- Backend service to service authentication
    # Ref: https://backstage.io/docs/auth/service-to-service-auth/
    backend:
      # -- Enable backend service to service authentication, unless configured otherwise it generates a secret value
      enabled: true
      # -- Instead of generating a secret value, refer to existing secret
      #existingSecret: ""
      # -- Instead of generating a secret value, use fo;lowing value
      #value: ""
  dynamic:
    includes:
      - dynamic-plugins.default.yaml
    plugins:
      - package: ./dynamic-plugins/dist/backstage-plugin-tech-radar
        disabled: false
route:
  annotations: {}
  enabled: true
  host: '{{ "{{" }} .Values.global.host {{ "}}" }}'
  path: /
  tls:
    caCertificate: ''
    certificate: ''
    destinationCACertificate: ''
    enabled: true
    insecureEdgeTerminationPolicy: Redirect
    key: ''
    termination: edge
  wildcardPolicy: None
upstream:
  backstage:
    appConfig:
      app:
        baseUrl: 'https://{{ "{{" }}- include "janus-idp.hostname" . {{ "}}" }}'
      backend:
        baseUrl: 'https://{{ "{{" }}- include "janus-idp.hostname" . {{ "}}" }}'
        reading:
          allow:
            - host: '*.opentlc.com'
        cors:
          origin: 'https://{{ "{{" }}- include "janus-idp.hostname" . {{ "}}" }}'
        database:
          connection:
            password: '${POSTGRESQL_ADMIN_PASSWORD}'
            user: postgres
        auth:
          keys:
            - secret: ${BACKEND_SECRET}
    args:
      - '--config'
      - dynamic-plugins-root/app-config.dynamic-plugins.yaml
    command: []
    image:
      #pullSecrets:
      #  - rhdh-pull-secret
      registry: registry.redhat.io
      repository: rhdh/rhdh-hub-rhel9
      #registry: quay.io
      #repository: rhdh/rhdh-hub-rhel9
      tag: '{{ rhdh_image_version }}'
    extraEnvVars:
      - name: POSTGRESQL_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres-password
            name: '{{ "{{" }} .Release.Name {{ "}}" }}-postgresql'
      - name: BACKEND_SECRET
        valueFrom:
          secretKeyRef:
            key: backend-secret
            name: '{{ "{{" }} include "janus-idp.backend-secret-name" $ {{ "}}" }}'
      - name: NODE_TLS_REJECT_UNAUTHORIZED
        value: '0' # when using self-signed certificates
      - name: AUTH_OIDC_CLIENT_ID
        value: rhdh
      - name: SESSION_SECRET
        value: 'superSecretSession'
      - name: AUTH_OIDC_CLIENT_SECRET
        value: ibpt0XiadE5XFNVQ4xnvhssk50aEWWVs
      - name: AUTH_OIDC_METADATA_URL
        value: https://keycloak-rhbk.apps.cluster-m998k.sandbox1967.opentlc.com/realms/rhdh/.well-known/openid-configuration
    extraAppConfig:
      - configMapRef: app-config-rhdh
        filename: app-config-rhdh.yaml
    #extraEnvVarsSecrets:
    #  - rhdh-github-plugin-secret
    #  - rhdh-k8s-plugin-secret
    #  - rhdh-argocd-plugin-secret
    #  - rhdh-quay-plugin-secret
    extraVolumes:
      - emptyDir: {}
        name: dynamic-plugins-root
      - configMap:
          defaultMode: 420
          name: dynamic-plugins
          optional: true
        name: dynamic-plugins
      - name: dynamic-plugins-npmrc
        secret:
          defaultMode: 420
          optional: true
          secretName: dynamic-plugins-npmrc

    initContainers:
      - command:
          - python
          - install-dynamic-plugins.py
          - /dynamic-plugins-root
        env:
          - name: NPM_CONFIG_USERCONFIG
            value: /opt/app-root/src/.npmrc.dynamic-plugins
        image: '{{ "{{" }} include "backstage.image" . {{ "}}" }}'
        imagePullPolicy: Always
        name: install-dynamic-plugins
        volumeMounts:
          - mountPath: /dynamic-plugins-root
            name: dynamic-plugins-root
          - mountPath: /opt/app-root/src/dynamic-plugins.yaml
            name: dynamic-plugins
            readOnly: true
            subPath: dynamic-plugins.yaml
          - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
            name: dynamic-plugins-npmrc
            readOnly: true
            subPath: .npmrc
        workingDir: /opt/app-root/src
    installDir: /opt/app-root/src
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthcheck
        port: 7007
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 2
    podAnnotations:
      checksum/dynamic-plugins: >-
        {{ "{{" }}- include "common.tplvalues.render" ( dict "value"
        .Values.global.dynamic "context" $) | sha256sum {{ "}}" }}
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthcheck
        port: 7007
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 2
      timeoutSeconds: 2
    extraContainers:
    - args:
        - '--provider=oidc'
        - '--email-domain=*'
        - '--upstream=http://localhost:7007'
        - '--http-address=0.0.0.0:4180'
        - '--skip-provider-button'
      env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: rhdh
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: ibpt0XiadE5XFNVQ4xnvhssk50aEWWVs
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: 'superSecretCookieValue'
        - name: OAUTH2_PROXY_OIDC_ISSUER_URL
          value: https://keycloak-rhbk.apps.cluster-m998k.sandbox1967.opentlc.com/realms/rhdh
        - name: OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY
          value: 'true'
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: '0'
        - name: LOG_LEVEL
          value: debug
      image: 'quay.io/oauth2-proxy/oauth2-proxy:latest'
      imagePullPolicy: IfNotPresent
      name: oauth2-proxy
      ports:
        - containerPort: 4180
          name: oauth2-proxy
          protocol: TCP
  ingress:
    enabled: false
    host: '{{ "{{" }} .Values.global.host {{ "}}" }}'
    tls:
      enabled: false
  keycloak:
    baseUrl: 'https://keycloak-rhbk.apps.cluster-m998k.sandbox1967.opentlc.com/'
    clientId: rhdh
    clientSecret: ibpt0XiadE5XFNVQ4xnvhssk50aEWWVs
    cookieSecret: ''
    realm: rhdh
  nameOverride: developer-hub
  networkPolicy:
    enabled: false
  postgresql:
    auth:
      secretKeys:
        adminPasswordKey: postgres-password
        userPasswordKey: password
    enabled: true
    image:
      registry: registry.redhat.io
      repository: rhel9/postgresql-15
      tag: latest
    postgresqlDataDir: /var/lib/pgsql/data/userdata
    primary:
      containerSecurityContext:
        enabled: false
      extraEnvVars:
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: '{{ "{{" }} .Release.Name {{ "}}" }}-postgresql'
      persistence:
        enabled: true
        mountPath: /var/lib/pgsql/data
        size: 1Gi
      podSecurityContext:
        enabled: false
      securityContext:
        enabled: false
  service:
    externalTrafficPolicy: Cluster
    ports:
      backend: 4180
      name: oauth2-proxy
      targetPort: oauth2-proxy
    sessionAffinity: None
    type: ClusterIP
  serviceAccount:
    automountServiceAccountToken: true
    create: false